<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 自动扫描该包，SpringMVC会将包下用了@controller注解的类注册为Spring的controller -->
    <context:component-scan base-package="com.hant.controller,com.hant.service,com.hant.repository"/>
    <!-- 设置默认配置方案 -->
    <mvc:annotation-driven/>
    <!-- 使用默认的Servlet来响应静态文件 -->
    <!--<mvc:default-servlet-handler/>-->


    <!--支持Controller的AOP代理-->
    <aop:aspectj-autoproxy/>
    <!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean，
		这是SpringMVC为@Controllers分发请求所必需的，并提供了数据绑定支持、@NumberFormatannotation支持、 @DateTimeFormat支持、@Valid支持、读写XML的支持和读写JSON的支持等功能。 -->
    <!-- 启动注解支持 -->

    <!-- 使用缺省名称为 cacheManager 的缓存管理器，其缺省实现为 org.springframework.cache.support.SimpleCacheManager -->
    <cache:annotation-driven/>

    <!-- 配置 spring 的 ConcurrentMapCache 缓存 ,如果用其他的缓存就不用-->
    <!--<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">-->
        <!--&lt;!&ndash; 配置缓存集合 &ndash;&gt;-->
        <!--<property name="caches">-->
            <!--<set>-->
                <!--&lt;!&ndash; 缺省方案 &ndash;&gt;-->
                <!--<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>-->
                <!--&lt;!&ndash; 自定义方案 &ndash;&gt;-->
                <!--<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="student"/>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->





    <!-- 定义Spring MVC的拦截器 -->
    <mvc:interceptors>
        <!--跨域拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.hant.filter.CorsFilter">
                <property name="allowCredentials" value="true"/>
                <property name="allowedHeaders" value="*"/>
                <property name="allowedMethods" value="GET,POST,HEAD,OPTIONS"/>
                <property name="allowedOrigins" value="*"/>
            </bean>
        </mvc:interceptor>
        <!--登陆拦截器-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/login"/>-->
            <!--<bean class="com.hant.filter.LoginFilter"/>-->
        <!--</mvc:interceptor>-->


    </mvc:interceptors>
    <!-- 视图解析器  -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.hant.aspect" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

</beans>